// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApp.Infrastructure.DatabaseContext;

#nullable disable

namespace SchoolApp.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContextSchool))]
    [Migration("20220204230520_DBSchemaV3")]
    partial class DBSchemaV3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("coursename")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<int>("professorid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("studentid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("professorid");

                    b.HasIndex("studentid");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            id = 1,
                            coursename = "Course 1",
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(2473),
                            createdby = "Seed Data",
                            professorid = 1,
                            studentid = 1,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(2483),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            coursename = "Course 2",
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(2488),
                            createdby = "Seed Data",
                            professorid = 2,
                            studentid = 2,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(2490),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            coursename = "Course 3",
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(2492),
                            createdby = "Seed Data",
                            professorid = 3,
                            studentid = 3,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(2494),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Level", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<string>("levelname")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("levels");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6373),
                            createdby = "Seed Data",
                            levelname = "Level 1",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6417),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6420),
                            createdby = "Seed Data",
                            levelname = "Level 2",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6421),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6424),
                            createdby = "Seed Data",
                            levelname = "Level 3",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6426),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastname")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("persons");

                    b.HasData(
                        new
                        {
                            id = 1,
                            birthdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6660),
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6663),
                            createdby = "Seed Data",
                            firstname = "Marouane",
                            lastname = "EL MABROUK",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6665),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            birthdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6669),
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6671),
                            createdby = "Seed Data",
                            firstname = "Smith",
                            lastname = "JOHN",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6673),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            birthdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6675),
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6676),
                            createdby = "Seed Data",
                            firstname = "William",
                            lastname = "MILLER",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6678),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 4,
                            birthdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6680),
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6682),
                            createdby = "Seed Data",
                            firstname = "Prof",
                            lastname = "EL MABROUK",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6683),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 5,
                            birthdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6685),
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6687),
                            createdby = "Seed Data",
                            firstname = "Prof",
                            lastname = "JOHN",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6689),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 6,
                            birthdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6691),
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6693),
                            createdby = "Seed Data",
                            firstname = "Prof",
                            lastname = "MILLER",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(6695),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Professor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<int>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("photoprofessor")
                        .HasColumnType("TEXT");

                    b.Property<string>("profcode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("personid");

                    b.ToTable("professors");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8055),
                            createdby = "Seed Data",
                            personid = 4,
                            photoprofessor = "avatar.png",
                            profcode = "CODE_1",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8066),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8071),
                            createdby = "Seed Data",
                            personid = 5,
                            photoprofessor = "avatar.png",
                            profcode = "CODE_2",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8072),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8075),
                            createdby = "Seed Data",
                            personid = 6,
                            photoprofessor = "avatar.png",
                            profcode = "CODE_3",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8077),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<int>("role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8612),
                            createdby = "Seed Data",
                            description = "Super Administrator Description",
                            role = 1,
                            title = "Super Administrator",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8619),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8623),
                            createdby = "Seed Data",
                            description = "Administrator Description",
                            role = 2,
                            title = "Administrator",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8624),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8627),
                            createdby = "Seed Data",
                            description = "Professor Description",
                            role = 3,
                            title = "Professor",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8629),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 4,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8631),
                            createdby = "Seed Data",
                            description = "Student Description",
                            role = 4,
                            title = "User",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8632),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 5,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8635),
                            createdby = "Seed Data",
                            description = "User Description",
                            role = 5,
                            title = "User",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 478, DateTimeKind.Local).AddTicks(8636),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<int>("levelid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("photostudent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("levelid");

                    b.HasIndex("personid");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(450),
                            createdby = "Seed Data",
                            levelid = 1,
                            personid = 1,
                            photostudent = "avatar.png",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(459),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(463),
                            createdby = "Seed Data",
                            levelid = 2,
                            personid = 2,
                            photostudent = "avatar.png",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(465),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(467),
                            createdby = "Seed Data",
                            levelid = 3,
                            personid = 3,
                            photostudent = "avatar.png",
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(468),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdby")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<int>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("roleid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("updatedby")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("personid");

                    b.HasIndex("roleid");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4642),
                            createdby = "Seed Data",
                            email = "user1@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 1,
                            roleid = 1,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4652),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4691),
                            createdby = "Seed Data",
                            email = "user2@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 2,
                            roleid = 2,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4694),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4727),
                            createdby = "Seed Data",
                            email = "user3@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 3,
                            roleid = 3,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4729),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 4,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4784),
                            createdby = "Seed Data",
                            email = "user4@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 4,
                            roleid = 4,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4787),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 5,
                            createdate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4818),
                            createdby = "Seed Data",
                            email = "user5@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 5,
                            roleid = 5,
                            updatedate = new DateTime(2022, 2, 5, 0, 5, 20, 479, DateTimeKind.Local).AddTicks(4820),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Course", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Professor", "professor")
                        .WithMany("courses")
                        .HasForeignKey("professorid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Student", "student")
                        .WithMany("courses")
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("professor");

                    b.Navigation("student");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Professor", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Person", "person")
                        .WithMany("professors")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("person");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Student", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Level", "level")
                        .WithMany("students")
                        .HasForeignKey("levelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Person", "person")
                        .WithMany("students")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("level");

                    b.Navigation("person");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.User", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Person", "person")
                        .WithMany("users")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Role", "role")
                        .WithMany("users")
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("person");

                    b.Navigation("role");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Level", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Person", b =>
                {
                    b.Navigation("professors");

                    b.Navigation("students");

                    b.Navigation("users");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Professor", b =>
                {
                    b.Navigation("courses");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Role", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Student", b =>
                {
                    b.Navigation("courses");
                });
#pragma warning restore 612, 618
        }
    }
}
