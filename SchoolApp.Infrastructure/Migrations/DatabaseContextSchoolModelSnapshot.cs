// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApp.Infrastructure.DatabaseContext;

#nullable disable

namespace SchoolApp.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContextSchool))]
    partial class DatabaseContextSchoolModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("coursename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("professorid")
                        .HasColumnType("int");

                    b.Property<int>("studentid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("professorid");

                    b.HasIndex("studentid");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            id = 1,
                            coursename = "Course 1",
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(9723),
                            createdby = "Seed Data",
                            professorid = 1,
                            studentid = 1,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(9735),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            coursename = "Course 2",
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(9740),
                            createdby = "Seed Data",
                            professorid = 2,
                            studentid = 2,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(9742),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            coursename = "Course 3",
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(9744),
                            createdby = "Seed Data",
                            professorid = 3,
                            studentid = 3,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(9745),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Level", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("levelname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("levels");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3737),
                            createdby = "Seed Data",
                            levelname = "Level 1",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3781),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3786),
                            createdby = "Seed Data",
                            levelname = "Level 2",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3787),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3789),
                            createdby = "Seed Data",
                            levelname = "Level 3",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3791),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("persons");

                    b.HasData(
                        new
                        {
                            id = 1,
                            birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3995),
                            createdby = "Seed Data",
                            firstname = "Marouane",
                            lastname = "EL MABROUK",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(3999),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4004),
                            createdby = "Seed Data",
                            firstname = "Smith",
                            lastname = "JOHN",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4005),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4007),
                            createdby = "Seed Data",
                            firstname = "William",
                            lastname = "MILLER",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4009),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 4,
                            birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4040),
                            createdby = "Seed Data",
                            firstname = "Prof",
                            lastname = "EL MABROUK",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4041),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 5,
                            birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4044),
                            createdby = "Seed Data",
                            firstname = "Prof",
                            lastname = "JOHN",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4045),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 6,
                            birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4049),
                            createdby = "Seed Data",
                            firstname = "Prof",
                            lastname = "MILLER",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(4050),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Professor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personid")
                        .HasColumnType("int");

                    b.Property<string>("profcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("personid");

                    b.ToTable("professors");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5093),
                            createdby = "Seed Data",
                            personid = 4,
                            profcode = "CODE_1",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5103),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5108),
                            createdby = "Seed Data",
                            personid = 5,
                            profcode = "CODE_2",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5109),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5111),
                            createdby = "Seed Data",
                            personid = 6,
                            profcode = "CODE_3",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5113),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5377),
                            createdby = "Seed Data",
                            description = "Super Administrator Description",
                            role = 1,
                            title = "Super Administrator",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5381),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5384),
                            createdby = "Seed Data",
                            description = "Administrator Description",
                            role = 2,
                            title = "Administrator",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5386),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5388),
                            createdby = "Seed Data",
                            description = "User Description",
                            role = 3,
                            title = "User",
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(5390),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("levelid")
                        .HasColumnType("int");

                    b.Property<int>("personid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("levelid");

                    b.HasIndex("personid");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(7117),
                            createdby = "Seed Data",
                            levelid = 1,
                            personid = 1,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(7127),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(7132),
                            createdby = "Seed Data",
                            levelid = 2,
                            personid = 2,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(7133),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(7135),
                            createdby = "Seed Data",
                            levelid = 3,
                            personid = 3,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 606, DateTimeKind.Local).AddTicks(7137),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personid")
                        .HasColumnType("int");

                    b.Property<int>("roleid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("personid");

                    b.HasIndex("roleid");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 607, DateTimeKind.Local).AddTicks(1972),
                            createdby = "Seed Data",
                            email = "user1@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 1,
                            roleid = 1,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 607, DateTimeKind.Local).AddTicks(1982),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 2,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 607, DateTimeKind.Local).AddTicks(2020),
                            createdby = "Seed Data",
                            email = "user2@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 2,
                            roleid = 2,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 607, DateTimeKind.Local).AddTicks(2021),
                            updatedby = "Seed Data"
                        },
                        new
                        {
                            id = 3,
                            createdate = new DateTime(2022, 1, 28, 14, 29, 43, 607, DateTimeKind.Local).AddTicks(2076),
                            createdby = "Seed Data",
                            email = "user3@mail.com",
                            password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            personid = 3,
                            roleid = 3,
                            updatedate = new DateTime(2022, 1, 28, 14, 29, 43, 607, DateTimeKind.Local).AddTicks(2078),
                            updatedby = "Seed Data"
                        });
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Course", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Professor", "professor")
                        .WithMany("courses")
                        .HasForeignKey("professorid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Student", "student")
                        .WithMany("courses")
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("professor");

                    b.Navigation("student");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Professor", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Person", "person")
                        .WithMany("professors")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("person");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Student", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Level", "level")
                        .WithMany("students")
                        .HasForeignKey("levelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Person", "person")
                        .WithMany("students")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("level");

                    b.Navigation("person");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.User", b =>
                {
                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Person", "person")
                        .WithMany("users")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApp.Infrastructure.Models.Classes.Role", "role")
                        .WithMany("users")
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("person");

                    b.Navigation("role");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Level", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Person", b =>
                {
                    b.Navigation("professors");

                    b.Navigation("students");

                    b.Navigation("users");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Professor", b =>
                {
                    b.Navigation("courses");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Role", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("SchoolApp.Infrastructure.Models.Classes.Student", b =>
                {
                    b.Navigation("courses");
                });
#pragma warning restore 612, 618
        }
    }
}
